let half = [| ":"; "@"; |]
let dots = [| " "; "`"; "."; ","; "'"; ":"; ";"; "\""; "*"; |]
let specials = [| " "; "."; ","; "-"; "+"; "="; "*"; "?"; "$"; "%"; "&"; "#"; "@"; |]
let variety = [| " "; "`"; "."; "'"; ","; ":"; ";"; "\""; "^"; "*"; "s"; "c"; "t"; "b"; "%"; "8"; "D"; "G"; "N"; "M"; "W"; "#"; "@"; |]
let operators = [| "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "-"; "~"; "~"; "~"; "~"; "~"; "~"; "~"; "~"; "~"; "~"; "~"; "~"; "~"; "~|]
let numbers = [| "4"; "7"; "7"; "7"; "7"; "7"; "7"; "7"; "7"; "7"; "7"; "7"; "7"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "1"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "3"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "6"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "9"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "2"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "5"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "0"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; "8"; |]
let block = [| "█"; |]
let blocks = [| " "; "░"; "▒"; "▓"; "█"; |]
let vblocks = [| " "; "▏"; "▎"; "▍"; "▌"; "▋"; "▊"; "▉"; "█"; |]
let hblocks = [| " "; "▁"; "▂"; "▃"; "▄"; "▅"; "▆"; "▇"; "█"; |]
let letters = [| "r"; "r"; "r"; "r"; "L"; "L"; "L"; "L"; "L"; "L"; "L"; "L"; "J"; "J"; "J"; "J"; "J"; "l"; "l"; "l"; "l"; "l"; "v"; "v"; "v"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "c"; "c"; "c"; "c"; "z"; "z"; "z"; "z"; "z"; "x"; "x"; "x"; "x"; "x"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "f"; "f"; "f"; "f"; "i"; "i"; "i"; "i"; "i"; "u"; "u"; "u"; "u"; "t"; "t"; "t"; "y"; "y"; "y"; "y"; "e"; "e"; "I"; "o"; "o"; "o"; "o"; "n"; "n"; "n"; "F"; "F"; "F"; "s"; "s"; "s"; "s"; "s"; "s"; "s"; "C"; "C"; "C"; "C"; "j"; "j"; "j"; "j"; "a"; "a"; "a"; "Z"; "Z"; "Z"; "Z"; "Z"; "Z"; "V"; "V"; "V"; "V"; "V"; "k"; "k"; "k"; "k"; "k"; "k"; "k"; "k"; "k"; "E"; "E"; "E"; "E"; "E"; "w"; "w"; "w"; "P"; "P"; "X"; "h"; "h"; "h"; "h"; "A"; "A"; "A"; "A"; "A"; "A"; "S"; "S"; "S"; "S"; "S"; "S"; "U"; "U"; "U"; "U"; "m"; "m"; "m"; "p"; "p"; "q"; "d"; "d"; "d"; "d"; "d"; "O"; "O"; "O"; "O"; "G"; "G"; "G"; "G"; "G"; "G"; "G"; "K"; "K"; "K"; "K"; "K"; "g"; "g"; "g"; "g"; "g"; "g"; "g"; "g"; "g"; "g"; "H"; "H"; "H"; "H"; "H"; "H"; "H"; "H"; "D"; "D"; "D"; "D"; "D"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "N"; "N"; "N"; "N"; "N"; "N"; "N"; "B"; "B"; "B"; "B"; "B"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "M"; "M"; "M"; "M"; "M"; "M"; "M"; "M"; "M"; "W"; "W"; "W"; "W"; "W"; |]
let uletters = [| "L"; "L"; "L"; "L"; "L"; "L"; "L"; "J"; "J"; "J"; "J"; "J"; "J"; "J"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "T"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "Y"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "I"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "F"; "C"; "C"; "C"; "C"; "C"; "C"; "C"; "C"; "C"; "C"; "C"; "C"; "Z"; "Z"; "Z"; "Z"; "Z"; "Z"; "Z"; "Z"; "Z"; "Z"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "V"; "E"; "E"; "E"; "E"; "E"; "E"; "E"; "E"; "P"; "P"; "P"; "P"; "X"; "X"; "X"; "X"; "X"; "A"; "A"; "A"; "A"; "A"; "A"; "A"; "A"; "S"; "S"; "S"; "S"; "S"; "S"; "S"; "U"; "U"; "U"; "U"; "U"; "U"; "U"; "U"; "U"; "U"; "O"; "O"; "O"; "O"; "O"; "O"; "G"; "G"; "G"; "G"; "G"; "G"; "G"; "G"; "G"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "K"; "H"; "H"; "H"; "H"; "H"; "H"; "H"; "H"; "H"; "H"; "D"; "D"; "D"; "D"; "D"; "D"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "R"; "N"; "N"; "N"; "N"; "N"; "N"; "N"; "N"; "B"; "B"; "B"; "B"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "Q"; "M"; "M"; "M"; "M"; "M"; "M"; "M"; "M"; "M"; "W"; "W"; "W"; "W"; "W"; |]
let all = [| " "; " "; " "; " "; " "; " "; " "; " "; " "; " "; "`"; "`"; "`"; "`"; "`"; "`"; "`"; "`"; "`"; "`"; "."; "."; "."; "."; "."; "."; "."; "."; "."; "-"; "-"; "-"; "-"; "-"; "'"; "'"; "'"; ","; ","; ","; ","; ","; ","; ","; ":"; ":"; ":"; ":"; ":"; ":"; "_"; "_"; "_"; "_"; "_"; "_"; "_"; "_"; ";"; ";"; ";"; ";"; ";"; ";"; ";"; ";"; ";"; "~"; "~"; "~"; "~"; "~"; "~"; "\""; "\""; "\""; "\""; "!"; "!"; "!"; "!"; "^"; "^"; "^"; "^"; "^"; "^"; "^"; "^"; "^"; "^"; "+"; "+"; "+"; "+"; "+"; "="; "="; "="; "<"; ">"; ">"; ">"; ">"; ">"; ">"; "|"; "|"; "|"; "|"; "|"; "*"; "*"; "*"; "*"; "?"; "?"; "?"; "r"; "r"; "r"; "/"; "/"; "L"; "L"; "L"; "L"; "J"; "J"; "l"; "l"; "l"; "v"; "T"; ")"; ")"; ")"; "c"; "c"; "z"; "z"; "x"; "x"; "["; "]"; "Y"; "Y"; "f"; "i"; "i"; "u"; "u"; "t"; "y"; "4"; "7"; "I"; "{"; "n"; "1"; "F"; "s"; "s"; "s"; "C"; "C"; "j"; "j"; "a"; "Z"; "Z"; "Z"; "V"; "V"; "3"; "k"; "6"; "9"; "9"; "#"; "#"; "E"; "P"; "h"; "2"; "A"; "A"; "A"; "S"; "S"; "5"; "5"; "U"; "m"; "d"; "d"; "d"; "O"; "O"; "G"; "G"; "G"; "K"; "K"; "g"; "g"; "0"; "0"; "0"; "&"; "8"; "8"; "H"; "H"; "D"; "R"; "R"; "R"; "R"; "$"; "$"; "$"; "N"; "N"; "B"; "Q"; "Q"; "Q"; "Q"; "M"; "M"; "M"; "M"; "W"; "W"; "W"; "W"; "W"; "W"; "W"; "W"; "W"; "W"; "W"; "@"; "@"; "@"; "@"; "@"; "@"; |]

let map_of_name = function
	| "block" -> block
	| "blocks" -> blocks
	| "vblocks" -> vblocks
	| "hblocks" -> hblocks
	| "dots" -> dots
	| "specials" -> specials
	| "operators" -> operators
	| "variety" -> variety
	| "numbers" -> numbers
	| "letters" -> letters
	| "uletters" -> uletters
	| "half" -> half
	| "all" -> all
	| _ -> Utils.error_msg "invalid set name"

let map_of_string str =
	Array.init (String.length str) (fun i -> String.make 1 str.[i])
